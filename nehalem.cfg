# instruction fetch queue size (in insts)
-fetch:ifqsize		8

# extra branch mis-prediction latency 
#-fetch:mplat		14

# branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred			2lev

# 2-level predictor config (<l1size> <l2size> <hist_size> <xor>) 
#gshare with W=14
-bpred:2lev		1 16384 14 1

# return address stack size (0 for no return stack)
-bpred:ras	4	

#BTB - 48Kbits (in cache) num of BTB sets needs to be a power of 2
-bpred:btb	4096 2

# instruction decode B/W (insts/cycle) 
-decode:width		4

# instruction issue B/W (insts/cycle) 
-issue:width		4 

# issue instructions down wrong execution paths
-issue:wrongpath	true 

# instruction commit B/W (insts/cycle) 
-commit:width		4

# register update unit (RUU) size - Note RUU size is the same as ROB Size - needs to be a power of 2
-ruu:size		128

# load/store queue (LSQ) size 
-lsq:size		128

# total number of integer ALU's available 
-res:ialu		8

# total number of integer multiplier/dividers available 
-res:imult		4 

#integer physical register file
#-issue:int_physical_registers	80

#floating point physical register file
#-issue:fp_physical_registers	72

# total number of memory system ports available (to CPU) 
#-res:memport		2 

# total number of floating point ALU's available 
-res:fpalu		4 

# total number of floating point multiplier/dividers available 
-res:fpmult		4

#register latency
#-register:latency	1

#-issue:delay		1
#-bpred:delay		1
#-btb:delay		1
#-ruu:delay		1

#maximum number of instructions to execute
#-max:inst	2000000000
-max:inst	20000000

# 64KB L1 data cache, 4-way set-associative, 64-byte blocks

-cache:dl1 dl1:256:64:4:l:4:2

# 2048KB L2 unified cache, 8-way set-associative, 128-byte blocks
-cache:dl2 ul2:2048:64:16:l:4:4

# 32KB I-cache, 2-way set associative, 64-byte blocks

-cache:il1 il1:256:64:2:l:1:2
-cache:il2 dl2

-cache:dl1lat	2
-cache:dl2lat	12
-cache:il2lat	12

-mem:lat 270  2
